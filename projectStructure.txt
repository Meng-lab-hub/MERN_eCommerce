Mern_Ecommerce Project



+ node_modules: contain packages which is installed here (mainly these packages are for backend)
+ .env: a file contail environment variable
+ .gitignore: define which file will note be pushed to GITHUB
+ example.env: since we don't wanna push .env to GITHUB, we will ignore it but store its information here instead
+ package.json: define what packages are required (mostly for backend here), also a npm script is here too




+ Backend
    - config: contain information and instruction to connect to database (MongoDB).
    - models: contain information and defination of our database schema e.g. column name, type, etc.
    - data: contain data of products and users
        > products.js: contain list of all products
        > users.js: contain list of users
    - server.js: is an entry point for server side, open connection with database, handle request and send response to the frontend
    - seeder.js: a script to run and import our data (users, products) from a file to MongoDB
    - routes: contain all routing
        > productRoutes.js: define all routings for products pages here.
    - middleware:
        > asyncHandler.js: not quite understand well. In routing, we also wanna do async and try, catch but we don't wanna do that every times, so we wrap this with asycHandler so we don't have to use try, catch. we will just handle error with express.
        > errorMiddleware.js: define exception handling to handle error that is thrown collectly from an part of the project (for now used only at productRoutes).
    - controllers: this is where a function definition is compare to C++. all routing function is defined here.
        > productController.js: a file where all product related routing is defined.


+ frontend
    - node_modules: contain all package necessary for this project. Obtain it by run "npm install" which install package defined at package.json
    - package.json: define all required packages
    - public: contain public file
        > image: contain image of each products right now
    - src: 
        > assets: contain style and logo
        > components: contain react components
        > screens: define each frontend screen (web app page)
        > App.js: define heading, footing and routing to each screen here?
        > index.js: entry point of frontend, call App.js component here
        > package.json: define necessary package used in frontend